buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
    }
}

repositories {
     	mavenCentral()
	maven {
		url "http://www.bugsense.com/gradle/"
        } 
}

apply plugin: 'android'

dependencies {
        compile 'com.squareup.dagger:dagger-compiler:1.1.0'
        compile 'com.squareup.dagger:dagger:1.1.0'
        compile 'com.google.code.gson:gson:2.2.4'
        compile 'com.android.support:support-v4:19.0.0'
        compile 'com.bugsense.trace:bugsense:3.6'
        compile 'com.google.android.gms:play-services:4.2.42'
	compile 'org.apache.commons:commons-lang3:3.1'
        compile 'org.mockito:mockito-all:1.9.5'
	compile 'com.squareup:otto:1.3.4'
	compile 'org.apache.commons:commons-lang3:3.1'
	compile project(':androidslidinguppanel')
	instrumentTestCompile files('libs/espresso-1.1.jar',
		  'libs/testrunner-1.1.jar',
		  'libs/testrunner-runtime-1.1.jar')
        instrumentTestCompile 'postgresql:postgresql:9.1-901-1.jdbc4'
	instrumentTestCompile 'com.google.guava:guava:14.0.1',
		  'org.hamcrest:hamcrest-core:1.1',
		  'org.hamcrest:hamcrest-integration:1.1',
		  'org.hamcrest:hamcrest-library:1.1'
}

android {
 	signingConfigs {
		release {
    		    storeFile new File( "android.key.store" )
		    storePassword "xxx"
    		    keyAlias "xxx"
    		    keyPassword "xxx"
		}
	}
  	buildTypes {
    		release {
      			signingConfig signingConfigs.release
    		}
  	}
        buildToolsVersion "19.0.1"                                                                                                          
        // Since the build tools auto fail on error, and we're getting werid erros with 0.7 of the build tools
        lintOptions {
            abortOnError false
            textReport true
            textOutput 'stdout'
            htmlReport true
        }
        sourceSets {
                main {
                    manifest.srcFile 'AndroidManifest.xml'
                    java {
                        srcDirs = ['src','volley/src']
                        exclude '**/*Tests*'
                    }
                    resources.srcDirs = ['src']
                    renderscript.srcDirs = ['src']
                    res.srcDirs = ['res']
                    assets.srcDirs = ['assets']
                }
                instrumentTest {
                        manifest.srcFile 'uiTests/AndroidManifest.xml'
                        java.srcDirs = ['uiTests/src']
                        res.srcDirs = ['uiTests/res']
                        resources.srcDirs = ['uiTests/src']
                        //assets.srcDirs = ['uiTests/assets']
                }
        }
        defaultConfig {
            testInstrumentationRunner 'com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner'
        }
        packagingOptions {
          exclude 'LICENSE.txt'
        }
        compileSdkVersion 19
}

// Unit tests

sourceSets {
        unitTest {
                java {
                        srcDirs = ['src']
                        include '**/*Tests*'
                }
        }
}

dependencies {
        unitTestCompile files("$project.buildDir/classes/debug")
        unitTestCompile 'junit:junit:4.11'
        unitTestCompile 'org.robolectric:robolectric:2.1.1'
        unitTestCompile 'com.google.android:android:4.0.1.2'
        unitTestCompile 'com.android.support:support-v4:19.0.0'
        unitTestCompile 'com.google.android.gms:play-services:4.2.42'
	unitTestCompile 'com.squareup:otto:1.3.4'
}

configurations {
        unitTestCompile.extendsFrom runtime
        unitTestRuntime.extendsFrom unitTestCompile
}

task unitTest(type:Test, dependsOn: assemble) {
        testLogging.events = ['failed','passed']
        testLogging.showStandardStreams = true
        testLogging.showCauses = true
        testLogging.showExceptions = true
        testLogging.showStackTraces = true
        description = "run unit tests"
        testClassesDir = project.sourceSets.unitTest.output.classesDir
        classpath = project.sourceSets.unitTest.runtimeClasspath
}
