repositories {
    mavenCentral()
}

dependencies {
    //testCompile 'junit:junit:[4,)'
}

ant.properties['sdk.dir']="$System.env.ANDROID_HOME"
ant.properties['target']='android-18'
ant.properties['out.filename']=project.name+'_tests.jar'
ant.properties['out.dir']=project.projectDir.toString()+'/bin/'
ant.properties['source.dir']=project.projectDir.toString()+'/uiTests' // Or wherever your tests are
ant.importBuild "$System.env.ANDROID_HOME"+'/tools/ant/uibuild.xml'


print ant.properties['source.dir']

task uiBuild(dependsOn: ['changeAppServiceDetailsToLocalhostFromEmulator']) << {
        ant.project.executeTarget('build')
}

task uiInstall(dependsOn: ['uiBuild']) << {
        ant.project.executeTarget('install')
}

task uiRun(dependsOn: ['uiInstall']) << {
    Process proc = ["$System.env.ANDROID_HOME"+"/platform-tools/adb", "shell", "uiautomator", "runtest", project.name+"_tests.jar", "-e because broken"].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('exec failed')
    }
}

task changeAppServiceDetailsToLocalhostFromEmulator() << {
    Process proc = ["/bin/bash", "emulatorTalkingToLocalServices.sh"].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('exec failed')
    }
    proc = ["/usr/bin/gradle", "installDebug"].execute()
    proc.consumeProcessErrorStream(System.err)
    proc.consumeProcessOutputStream(System.out)
    if (proc.waitFor() != 0) {
        throw new RuntimeException('exec failed')
    }
}
